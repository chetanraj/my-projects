{"version":3,"sources":["webpack:///./src/components/Projects.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Hero.js","webpack:///./src/components/App.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["Projects","_ref","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","className","site","siteMetadata","projects","map","project","onClick","url","console","log","name","_2234229499","IndexPage","App","seo","title","keywords","components_Projects","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","Layout","Fragment","Hero","style","margin","maxWidth","padding","paddingTop","_755544856","node","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"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","file":"component---src-pages-index-js-e6937fa568b4b9620558.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport './App.css';\n\nfunction openProject(url) {\n  console.log('url :: ', url);\n}\n\nconst Projects = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query Projects {\n        site {\n          siteMetadata {\n            projects {\n              name\n              url\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"cards\">\n        {data.site.siteMetadata.projects.map(project => {\n          return (\n            <div className=\"card-container\">\n              <div className=\"frame\" />\n              <div onClick={() => openProject(project.url)} className=\"card\">\n                {project.name}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    )}\n  />\n);\n\nexport default Projects;\n","import React from 'react';\n\nimport App from '../components/App';\nimport Projects from '../components/Projects';\nimport SEO from '../components/seo';\n\nconst IndexPage = () => (\n  <App>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Projects />\n  </App>\n);\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"hero\">\n    <div className=\"content\">\n      <h1>{siteTitle}</h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Hero from './Hero';\nimport './App.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Hero siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}